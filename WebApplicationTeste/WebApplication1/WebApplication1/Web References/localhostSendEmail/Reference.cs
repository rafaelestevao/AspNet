//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplication1.localhostSendEmail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="emailSoap", Namespace="http://br.bayer.bbs.util/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class ServiceEmail : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailCCorBCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailWithPersonalFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailCCorBCCWithFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailAttachmentCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailAttachmentCollectionWithFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailAttachmentCollectionBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailAttachmentCollectionBase64WithFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailWithReplyToOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailWithFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailWithFromNameAndReplyToOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailBlockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceEmail() {
            this.Url = global::WebApplication1.Properties.Settings.Default.WebApplication1_localhostSendEmail_ServiceEmail;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendMailCompletedEventHandler sendMailCompleted;
        
        /// <remarks/>
        public event sendMailCCorBCCCompletedEventHandler sendMailCCorBCCCompleted;
        
        /// <remarks/>
        public event sendMailWithPersonalFromCompletedEventHandler sendMailWithPersonalFromCompleted;
        
        /// <remarks/>
        public event sendMailCCorBCCWithFromNameCompletedEventHandler sendMailCCorBCCWithFromNameCompleted;
        
        /// <remarks/>
        public event sendMailAttachmentCollectionCompletedEventHandler sendMailAttachmentCollectionCompleted;
        
        /// <remarks/>
        public event sendMailAttachmentCollectionWithFromNameCompletedEventHandler sendMailAttachmentCollectionWithFromNameCompleted;
        
        /// <remarks/>
        public event sendMailAttachmentCollectionBase64CompletedEventHandler sendMailAttachmentCollectionBase64Completed;
        
        /// <remarks/>
        public event sendMailAttachmentCollectionBase64WithFromNameCompletedEventHandler sendMailAttachmentCollectionBase64WithFromNameCompleted;
        
        /// <remarks/>
        public event sendMailWithReplyToCompletedEventHandler sendMailWithReplyToCompleted;
        
        /// <remarks/>
        public event sendMailWithFromNameCompletedEventHandler sendMailWithFromNameCompleted;
        
        /// <remarks/>
        public event sendMailWithFromNameAndReplyToCompletedEventHandler sendMailWithFromNameAndReplyToCompleted;
        
        /// <remarks/>
        public event sendMailBlockCompletedEventHandler sendMailBlockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMail", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMail(string mailTo, string subject, string body, bool htmlMail) {
            object[] results = this.Invoke("sendMail", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAsync(string mailTo, string subject, string body, bool htmlMail) {
            this.sendMailAsync(mailTo, subject, body, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailAsync(string mailTo, string subject, string body, bool htmlMail, object userState) {
            if ((this.sendMailOperationCompleted == null)) {
                this.sendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailOperationCompleted);
            }
            this.InvokeAsync("sendMail", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail}, this.sendMailOperationCompleted, userState);
        }
        
        private void OnsendMailOperationCompleted(object arg) {
            if ((this.sendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCompleted(this, new sendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailCCorBCC", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailCCorBCC(string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            object[] results = this.Invoke("sendMailCCorBCC", new object[] {
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailCCorBCCAsync(string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            this.sendMailCCorBCCAsync(mailTo, mailCC, mailBCC, subject, body, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailCCorBCCAsync(string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail, object userState) {
            if ((this.sendMailCCorBCCOperationCompleted == null)) {
                this.sendMailCCorBCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailCCorBCCOperationCompleted);
            }
            this.InvokeAsync("sendMailCCorBCC", new object[] {
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail}, this.sendMailCCorBCCOperationCompleted, userState);
        }
        
        private void OnsendMailCCorBCCOperationCompleted(object arg) {
            if ((this.sendMailCCorBCCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCCorBCCCompleted(this, new sendMailCCorBCCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailWithPersonalFrom", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailWithPersonalFrom(string personalMailFrom, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            object[] results = this.Invoke("sendMailWithPersonalFrom", new object[] {
                        personalMailFrom,
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailWithPersonalFromAsync(string personalMailFrom, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            this.sendMailWithPersonalFromAsync(personalMailFrom, mailTo, mailCC, mailBCC, subject, body, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailWithPersonalFromAsync(string personalMailFrom, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail, object userState) {
            if ((this.sendMailWithPersonalFromOperationCompleted == null)) {
                this.sendMailWithPersonalFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailWithPersonalFromOperationCompleted);
            }
            this.InvokeAsync("sendMailWithPersonalFrom", new object[] {
                        personalMailFrom,
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail}, this.sendMailWithPersonalFromOperationCompleted, userState);
        }
        
        private void OnsendMailWithPersonalFromOperationCompleted(object arg) {
            if ((this.sendMailWithPersonalFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailWithPersonalFromCompleted(this, new sendMailWithPersonalFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailCCorBCCWithFromName", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailCCorBCCWithFromName(string FromName, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            object[] results = this.Invoke("sendMailCCorBCCWithFromName", new object[] {
                        FromName,
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailCCorBCCWithFromNameAsync(string FromName, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail) {
            this.sendMailCCorBCCWithFromNameAsync(FromName, mailTo, mailCC, mailBCC, subject, body, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailCCorBCCWithFromNameAsync(string FromName, string mailTo, string mailCC, string mailBCC, string subject, string body, bool htmlMail, object userState) {
            if ((this.sendMailCCorBCCWithFromNameOperationCompleted == null)) {
                this.sendMailCCorBCCWithFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailCCorBCCWithFromNameOperationCompleted);
            }
            this.InvokeAsync("sendMailCCorBCCWithFromName", new object[] {
                        FromName,
                        mailTo,
                        mailCC,
                        mailBCC,
                        subject,
                        body,
                        htmlMail}, this.sendMailCCorBCCWithFromNameOperationCompleted, userState);
        }
        
        private void OnsendMailCCorBCCWithFromNameOperationCompleted(object arg) {
            if ((this.sendMailCCorBCCWithFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCCorBCCWithFromNameCompleted(this, new sendMailCCorBCCWithFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailAttachmentCollection", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailAttachmentCollection(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            object[] results = this.Invoke("sendMailAttachmentCollection", new object[] {
                        mailTo,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionAsync(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            this.sendMailAttachmentCollectionAsync(mailTo, subject, body, attachList, attachListType, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionAsync(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail, object userState) {
            if ((this.sendMailAttachmentCollectionOperationCompleted == null)) {
                this.sendMailAttachmentCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailAttachmentCollectionOperationCompleted);
            }
            this.InvokeAsync("sendMailAttachmentCollection", new object[] {
                        mailTo,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail}, this.sendMailAttachmentCollectionOperationCompleted, userState);
        }
        
        private void OnsendMailAttachmentCollectionOperationCompleted(object arg) {
            if ((this.sendMailAttachmentCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailAttachmentCollectionCompleted(this, new sendMailAttachmentCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailAttachmentCollectionWithFromName", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailAttachmentCollectionWithFromName(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            object[] results = this.Invoke("sendMailAttachmentCollectionWithFromName", new object[] {
                        mailTo,
                        FromName,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionWithFromNameAsync(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            this.sendMailAttachmentCollectionWithFromNameAsync(mailTo, FromName, subject, body, attachList, attachListType, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionWithFromNameAsync(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail, object userState) {
            if ((this.sendMailAttachmentCollectionWithFromNameOperationCompleted == null)) {
                this.sendMailAttachmentCollectionWithFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailAttachmentCollectionWithFromNameOperationCompleted);
            }
            this.InvokeAsync("sendMailAttachmentCollectionWithFromName", new object[] {
                        mailTo,
                        FromName,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail}, this.sendMailAttachmentCollectionWithFromNameOperationCompleted, userState);
        }
        
        private void OnsendMailAttachmentCollectionWithFromNameOperationCompleted(object arg) {
            if ((this.sendMailAttachmentCollectionWithFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailAttachmentCollectionWithFromNameCompleted(this, new sendMailAttachmentCollectionWithFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailAttachmentCollectionBase64", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailAttachmentCollectionBase64(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            object[] results = this.Invoke("sendMailAttachmentCollectionBase64", new object[] {
                        mailTo,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionBase64Async(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            this.sendMailAttachmentCollectionBase64Async(mailTo, subject, body, attachList, attachListType, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionBase64Async(string mailTo, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail, object userState) {
            if ((this.sendMailAttachmentCollectionBase64OperationCompleted == null)) {
                this.sendMailAttachmentCollectionBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailAttachmentCollectionBase64OperationCompleted);
            }
            this.InvokeAsync("sendMailAttachmentCollectionBase64", new object[] {
                        mailTo,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail}, this.sendMailAttachmentCollectionBase64OperationCompleted, userState);
        }
        
        private void OnsendMailAttachmentCollectionBase64OperationCompleted(object arg) {
            if ((this.sendMailAttachmentCollectionBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailAttachmentCollectionBase64Completed(this, new sendMailAttachmentCollectionBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailAttachmentCollectionBase64WithFromNa" +
            "me", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailAttachmentCollectionBase64WithFromName(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            object[] results = this.Invoke("sendMailAttachmentCollectionBase64WithFromName", new object[] {
                        mailTo,
                        FromName,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionBase64WithFromNameAsync(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail) {
            this.sendMailAttachmentCollectionBase64WithFromNameAsync(mailTo, FromName, subject, body, attachList, attachListType, htmlMail, null);
        }
        
        /// <remarks/>
        public void sendMailAttachmentCollectionBase64WithFromNameAsync(string mailTo, string FromName, string subject, string body, object[] attachList, object[] attachListType, bool htmlMail, object userState) {
            if ((this.sendMailAttachmentCollectionBase64WithFromNameOperationCompleted == null)) {
                this.sendMailAttachmentCollectionBase64WithFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailAttachmentCollectionBase64WithFromNameOperationCompleted);
            }
            this.InvokeAsync("sendMailAttachmentCollectionBase64WithFromName", new object[] {
                        mailTo,
                        FromName,
                        subject,
                        body,
                        attachList,
                        attachListType,
                        htmlMail}, this.sendMailAttachmentCollectionBase64WithFromNameOperationCompleted, userState);
        }
        
        private void OnsendMailAttachmentCollectionBase64WithFromNameOperationCompleted(object arg) {
            if ((this.sendMailAttachmentCollectionBase64WithFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailAttachmentCollectionBase64WithFromNameCompleted(this, new sendMailAttachmentCollectionBase64WithFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailWithReplyTo", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailWithReplyTo(string mailTo, string subject, string body, bool htmlMail, string replyTo) {
            object[] results = this.Invoke("sendMailWithReplyTo", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        replyTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailWithReplyToAsync(string mailTo, string subject, string body, bool htmlMail, string replyTo) {
            this.sendMailWithReplyToAsync(mailTo, subject, body, htmlMail, replyTo, null);
        }
        
        /// <remarks/>
        public void sendMailWithReplyToAsync(string mailTo, string subject, string body, bool htmlMail, string replyTo, object userState) {
            if ((this.sendMailWithReplyToOperationCompleted == null)) {
                this.sendMailWithReplyToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailWithReplyToOperationCompleted);
            }
            this.InvokeAsync("sendMailWithReplyTo", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        replyTo}, this.sendMailWithReplyToOperationCompleted, userState);
        }
        
        private void OnsendMailWithReplyToOperationCompleted(object arg) {
            if ((this.sendMailWithReplyToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailWithReplyToCompleted(this, new sendMailWithReplyToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailWithFromName", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailWithFromName(string mailTo, string subject, string body, bool htmlMail, string FromName) {
            object[] results = this.Invoke("sendMailWithFromName", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        FromName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailWithFromNameAsync(string mailTo, string subject, string body, bool htmlMail, string FromName) {
            this.sendMailWithFromNameAsync(mailTo, subject, body, htmlMail, FromName, null);
        }
        
        /// <remarks/>
        public void sendMailWithFromNameAsync(string mailTo, string subject, string body, bool htmlMail, string FromName, object userState) {
            if ((this.sendMailWithFromNameOperationCompleted == null)) {
                this.sendMailWithFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailWithFromNameOperationCompleted);
            }
            this.InvokeAsync("sendMailWithFromName", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        FromName}, this.sendMailWithFromNameOperationCompleted, userState);
        }
        
        private void OnsendMailWithFromNameOperationCompleted(object arg) {
            if ((this.sendMailWithFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailWithFromNameCompleted(this, new sendMailWithFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailWithFromNameAndReplyTo", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailWithFromNameAndReplyTo(string mailTo, string subject, string body, bool htmlMail, string FromName, string replyTo) {
            object[] results = this.Invoke("sendMailWithFromNameAndReplyTo", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        FromName,
                        replyTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailWithFromNameAndReplyToAsync(string mailTo, string subject, string body, bool htmlMail, string FromName, string replyTo) {
            this.sendMailWithFromNameAndReplyToAsync(mailTo, subject, body, htmlMail, FromName, replyTo, null);
        }
        
        /// <remarks/>
        public void sendMailWithFromNameAndReplyToAsync(string mailTo, string subject, string body, bool htmlMail, string FromName, string replyTo, object userState) {
            if ((this.sendMailWithFromNameAndReplyToOperationCompleted == null)) {
                this.sendMailWithFromNameAndReplyToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailWithFromNameAndReplyToOperationCompleted);
            }
            this.InvokeAsync("sendMailWithFromNameAndReplyTo", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        FromName,
                        replyTo}, this.sendMailWithFromNameAndReplyToOperationCompleted, userState);
        }
        
        private void OnsendMailWithFromNameAndReplyToOperationCompleted(object arg) {
            if ((this.sendMailWithFromNameAndReplyToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailWithFromNameAndReplyToCompleted(this, new sendMailWithFromNameAndReplyToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://br.bayer.bbs.util/webservices/sendMailBlock", RequestNamespace="http://br.bayer.bbs.util/webservices/", ResponseNamespace="http://br.bayer.bbs.util/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMailBlock(string mailTo, string subject, string body, bool htmlMail, long numberOfMails, long numberOfThisMail) {
            object[] results = this.Invoke("sendMailBlock", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        numberOfMails,
                        numberOfThisMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailBlockAsync(string mailTo, string subject, string body, bool htmlMail, long numberOfMails, long numberOfThisMail) {
            this.sendMailBlockAsync(mailTo, subject, body, htmlMail, numberOfMails, numberOfThisMail, null);
        }
        
        /// <remarks/>
        public void sendMailBlockAsync(string mailTo, string subject, string body, bool htmlMail, long numberOfMails, long numberOfThisMail, object userState) {
            if ((this.sendMailBlockOperationCompleted == null)) {
                this.sendMailBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailBlockOperationCompleted);
            }
            this.InvokeAsync("sendMailBlock", new object[] {
                        mailTo,
                        subject,
                        body,
                        htmlMail,
                        numberOfMails,
                        numberOfThisMail}, this.sendMailBlockOperationCompleted, userState);
        }
        
        private void OnsendMailBlockOperationCompleted(object arg) {
            if ((this.sendMailBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailBlockCompleted(this, new sendMailBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailCompletedEventHandler(object sender, sendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailCCorBCCCompletedEventHandler(object sender, sendMailCCorBCCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailCCorBCCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailCCorBCCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailWithPersonalFromCompletedEventHandler(object sender, sendMailWithPersonalFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailWithPersonalFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailWithPersonalFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailCCorBCCWithFromNameCompletedEventHandler(object sender, sendMailCCorBCCWithFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailCCorBCCWithFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailCCorBCCWithFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailAttachmentCollectionCompletedEventHandler(object sender, sendMailAttachmentCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailAttachmentCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailAttachmentCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailAttachmentCollectionWithFromNameCompletedEventHandler(object sender, sendMailAttachmentCollectionWithFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailAttachmentCollectionWithFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailAttachmentCollectionWithFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailAttachmentCollectionBase64CompletedEventHandler(object sender, sendMailAttachmentCollectionBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailAttachmentCollectionBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailAttachmentCollectionBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailAttachmentCollectionBase64WithFromNameCompletedEventHandler(object sender, sendMailAttachmentCollectionBase64WithFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailAttachmentCollectionBase64WithFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailAttachmentCollectionBase64WithFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailWithReplyToCompletedEventHandler(object sender, sendMailWithReplyToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailWithReplyToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailWithReplyToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailWithFromNameCompletedEventHandler(object sender, sendMailWithFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailWithFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailWithFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailWithFromNameAndReplyToCompletedEventHandler(object sender, sendMailWithFromNameAndReplyToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailWithFromNameAndReplyToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailWithFromNameAndReplyToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendMailBlockCompletedEventHandler(object sender, sendMailBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591